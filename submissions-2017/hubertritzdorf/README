MyToken is a revenue-based ICO token. Any future revenue of the company is divided among the token holders according to their share of the tokens. To realize this revenue sharing, all clients of the company pay directly to the distribute() function. The distribute function performs the actual distribution. As the revenue with not be divisible by the number of tokens a residue is kept in the contract and spent during the next distribution.

It is a minimal, fixed-amount token based on two standard libraries: IterableMapping/ItMap is to allow the distribution and InternallyPausable is required to prevent re-entrancy attacks.

IterableMapping/ItMap is slightly modified to serve as an (address => uint) mapping. A diff is provided: http://diffbin.herokuapp.com/o3
InternallyPausable is slightly modified so that the owner cannot overwrite the pause function. A diff is provided: http://diffbin.herokuapp.com/o4


Spoilers below:






















































































The vulnerability is simply an arithmetic error inside the distribute function. "tokenBalance/remainingTokens" will always be 0 except for the last token holder. Therefore the last token holder receives all the funds. Note, that due to the IterableMapping, the last token holder during the iteration is the least recently added owner. This way, an adversary can easily get himself into this position, e.g. by purchasing a single token once he expects a payment to the distribute function. Or by buying a single token once and then always transferring it to a new address, thereby always remaining the least recently added owner.

The bug has plausible deniability as it is a common mistake, due to the fact that this evaluations are program-language specific. Additionally, the benefactor is unknown. The owner can claim that an adversary found an exploited the mistake, while it might very well be the owner himself. Finally, the owner has demonstrated due diligence, by performing input checks and protecting against re-entrancy.


